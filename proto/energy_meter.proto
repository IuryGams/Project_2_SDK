syntax = "proto3";


service EnergyMeter
{  
    rpc GetAllLines(Empty) returns (AllLinesReply);
    rpc GetAllMeters(Empty) returns (MeterListReply);
    
    rpc GetModelsByLine(RequestMeterLine) returns (MeterListReply);

    rpc CreateMeter(MeterCompleteInfor) returns (MeterCompleteInfor);
    rpc ReadMeter(MeterID) returns (ReadMeterReply);
    rpc DeleteMeter(MeterID) returns (ResponseStatus);
}

message Empty {}

// ##### START ENUM #####

enum ReplyStatusException
{
    UNKNOWN_ERROR = 0;
    THIS_METER_ALREADY_EXIST = 1;
    NOT_FOUND = 2;
    NOT_POSSIBLE_CREATE_METER = 3;
}

enum Lines
{
    UNKNOWN = 0;
    ARES = 1;
    APOLO = 2;
    CRONOS = 3;
    ZEUS = 4;
}

// ##### START LINES #####

message RequestMeterLine
{
    string meter_line = 1;
}

message AllLinesReply
{
    repeated Lines lines = 1;
    optional ReplyStatusException resp = 2;
}

// ##### START METER #####

message MeterID
{
    int32 id = 1;
}

message MeterCompleteInfor
{
    int32 id = 1;
    Lines line = 2;
    string model = 3;
}

message MeterListReply
{
    repeated MeterCompleteInfor meters = 1;
}

// ##### START RESPONSE #####

message ResponseStatus
{
    enum ReplyStatus
    {
        COMMAND_EXECUTION_SUCCESSFUL = 0;
        COMMAND_EXECUTION_FAILED = 1;
    }

    ReplyStatus status = 1;
}

message ReadMeterReply
{
    oneof resp 
    {
        MeterCompleteInfor meter = 1;
        ReplyStatusException response = 2;
    }
}
